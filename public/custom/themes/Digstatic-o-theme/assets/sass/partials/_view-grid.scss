.label-switch {  

  ///////////////////////////////////////////////////////////////////////////////////
  $base-accent-color: #477DCA !default;
  $base-background-color: white !default;
  //////////////////////////////////////////////////////////////////////////////////

  $switch-width: 52px;
  $switch-padding: 2px;
  $switch-height: 32px;
  $switch-radius: $switch-height;
  $knob-size: $switch-height - ($switch-padding * 2);
  $knob-radius: $switch-height - ($switch-padding * 2);
  $knob-width: $knob-size;
  $switch-background: $base-background-color;
  $switch-border-background: darken($base-background-color, 12%);
  $switch-shadow: 0 2px 5px transparentize(black, 0.1);

  border-radius: $switch-radius;
  cursor: pointer;
  display: inline-block;
  height: $switch-height;
  position: relative;
  width: $switch-width;

  input[type="checkbox"] {
    display: none;

    + .checkbox {
      @include transition(all 0.3s ease);
      background: $switch-border-background;
      border-radius: $switch-radius;
      border: none;
      cursor: pointer;
      height: $switch-height;
      margin: 0;
      padding: 0;
      position: relative;
      width: $switch-width;
      z-index: 0;

      &:before {
        @include position(absolute, 2px 0 0 2px);
        @include transform(scale(1));
        @include transition(all 0.3s ease);
        background: $switch-background;
        border-radius: $switch-radius;
        content: "";
        height: $knob-radius;
        width: $switch-width - ($switch-padding * 2);
        z-index: 1;
      }

      &:after {
        @include position(absolute, 2px 0 0 2px);
        @include transition(all 0.3s ease);
        @include size($knob-size);
        background: $switch-background;
        border-radius: $knob-radius;
        box-shadow: $switch-shadow;
        content: "";
        z-index: 2;
      }
    }

    &:checked {
      + .checkbox {
        background: $base-accent-color;

        &:before {
          @include transform(scale(0));
        }

        &:after {
          left: $switch-width - $knob-width - ($switch-padding);
        }
      }
    }
  }
}
.grid_control{
  z-index: 99999;
  position: fixed;
  right:80px;
  top:180px;
  span{
    color:#777;
    line-height: 1em;
    font-size: 0.5em;
  }
  label.switch-x{
  //position: fixed;
  //bottom: 4.125em;
  z-index: 999999;
  //right: 1.825em;
}
label.switch-y{
  //position: fixed;
  //bottom: 8.125em;
  z-index: 999999;
  //right: 1.825em;
}

}




@mixin grid-column-gradient($values...) {
  background-image: -webkit-linear-gradient(left, $values);
  background-image: -moz-linear-gradient(left, $values);
  background-image: -ms-linear-gradient(left, $values);
  background-image: -o-linear-gradient(left, $values);
  background-image: unquote("linear-gradient(to left, #{$values})");
}
//$base-font-size:    18px;
//$line-height-ratio: 28px;
//@if $visual-grid == true or $visual-grid == yes {
body{

//font-size: $base-font-size;
//line-height: $line-height-ratio;
  &.checked-y{
    background-image: url(http://basehold.it/i/24/ff0000); 
    //background: url(http://basehold.it/i/28); 
    font-size: $base-font-size;
    line-height: $base-line-height;
    img.portada.portfolio{
      opacity: 0.7;
    }
  }

  //.container{ 
  //  &-frame{      
  //    &.main {
  //      & > .row {
          &:before {
            content: none;
          }       
  //      }
  //    }
  //  }
  //}

  &.checked-x{


//    .container{ 
//
//      &-frame{
//        
//        &.main {
//          & > .row {

            &:before {
              content: '';
              display: inline-block;
              @include grid-column-gradient(gradient-stops($grid-columns));
              height: 100%;
              left: 2em;
              margin: 0 auto;
              //margin: 0 2em;
              max-width: $max-width;
              opacity: $visual-grid-opacity;
              position: fixed;
              right: 2em;
              //width: 100%;
              pointer-events: none;

              @if $visual-grid-index == back {
                z-index: -1;
              }

              @else if $visual-grid-index == front {
                z-index: 9999;
              }

              @each $breakpoint in $visual-grid-breakpoints {
                @if $breakpoint {
                  @include media($breakpoint) {
                    @include grid-column-gradient(gradient-stops($grid-columns));
                  }
                }
              }
            }       
          }
        }
//      }
//    }
//  }
//}
